name: Run Nx target
description: Setup the Nx cache, and run a target

inputs:
  target:
    description: The Nx target to run
    required: true
  github_token:
    description: GitHub token
    default: '${{ github.token }}'

runs:
  using: composite
  steps:
    - uses: ./.github/actions/install
      id: install
    - env:
        cache_key: "nx-cache-${{ github.ref }}"
    - name: Restore Nx cache
      uses: actions/cache/restore@v4
      id: cache-restore
      with:
        path: .nx
        key: ${{ env.cache_key }}
    - name: Derive appropriate SHAs for base and head for `nx affected` commands
      if: github.event_name == 'pull_request'
      uses: nrwl/nx-set-shas@v2
      with:
        main-branch-name: ${{ github.event.pull_request.base.ref }}
    - name: Run - Affected
      if: github.event_name == 'pull_request'
      shell: bash
      run: NX_REJECT_UNKNOWN_LOCAL_CACHE=0 pnpm nx affected -t ${{ inputs.target }} --base origin/${{ github.event.pull_request.base.ref }} --head HEAD
    - name: Lint
      if: github.event_name != 'pull_request'
      shell: bash
      run: NX_REJECT_UNKNOWN_LOCAL_CACHE=0 pnpm nx run-many --target=${{ inputs.target }} --all
    - name: Delete Previous Nx Cache
      if: ${{ steps.cache-restore.outputs.cache-hit }}
      continue-on-error: true
      shell: bash
      run: |
        gh extension install actions/gh-actions-cache
        gh actions-cache delete "${{ env.cache_key }}" --confirm
      env:
        GH_TOKEN: ${{ inputs.github_token }}
    - name: Save Nx cache
      uses: actions/cache/save@v4
      with:
        path: .nx
        key: ${{ env.cache_key }}
